
type Comment {
	createdBy: String!
	comment: String!
	createdAt: NaiveDateTime!
}




type Issue {
	assignedTo: String
	createdAt: NaiveDateTime!
	createdBy: String!
	description: String!
	toOffline: ToOffline
	id: Int!
	status: IssueStatus!
	title: String!
	comments: [Comment!]!
	target: Target
}

enum IssueStatus {
	OPEN
	CLOSED
}

type Mutation {
	open(issue: NewIssue!): Issue!
	close(issue: Int!, comment: String!): String!
	updateIssue(issue: UpdateIssue!): Issue!
}

"""
ISO 8601 combined date and time without timezone.

# Examples

* `2015-07-01T08:59:60.123`,
"""
scalar NaiveDateTime

input NewIssue {
	assignedTo: String
	description: String!
	toOffline: ToOffline
	target: String!
	title: String!
}

type Query {
	issue(issue: Int!): Issue
	issues(status: IssueStatus, target: String): [Issue!]!
}


type Target {
	name: String!
	status: TargetStatus!
}

enum TargetStatus {
	ONLINE
	DRAINING
	OFFLINE
	DOWN
	UNKNOWN
}

enum ToOffline {
	TARGET
	SIBLINGS
	COUSINS
}

input UpdateIssue {
	assignedTo: String
	description: String
	toOffline: ToOffline
	id: Int!
	title: String
}

schema {
	query: Query
	mutation: Mutation
}

